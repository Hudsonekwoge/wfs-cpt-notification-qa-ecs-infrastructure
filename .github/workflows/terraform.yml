name: Terraform State Change Management

on:
  push:
    branches:
      - main

env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: qa
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::697051637339:role/wfs-github-actions-role-new
          role-session-name: GitHubActions
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.3

      - name: Terraform init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      - name: Terraform validate
        run: terraform validate

      - name: Terraform apply
        run: terraform apply -auto-approve -input=false -lock=false

  # terraform-destroy:
  #   name: "Manual Terraform Destroy"
  #   runs-on: ubuntu-latest
  #   needs: terraform  # Only runs if 'terraform' job succeeds
  #   environment: qa
  #   defaults:
  #     run:
  #       shell: bash
  #       working-directory: ./terraform
  #   # if: github.event_name == 'workflow_dispatch'  # Ensures manual execution only
  #   steps:
  #     - name: Checkout runner repository
  #       uses: actions/checkout@v3

  #     - name: Setup Terraform with specified version
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.10.3

      # - name: Terraform init
      #   run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"

      # - name: Terraform destroy (Manual Trigger Required)
      #   run: terraform destroy -auto-approve -input=false